[{"__type__":"cc.SpriteFrame","content":{"name":"default_btn_disabled","texture":"71VhFCTINJM6/Ky3oX9nBT","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}},{"__type__":"cc.SpriteFrame","content":{"name":"default_scrollbar","texture":"02kcE0s9pAmLe145ftvpR/","rect":[0,0,30,15],"offset":[0,0],"originalSize":[30,15],"capInsets":[10,4,10,4]}},{"__type__":"cc.Material","_name":"NormalMapMaterial","_effectAsset":{"__uuid__":"edBMaf6kZIT4mx6wJPGcb9"},"_techniqueData":{"0":{"defines":{"USE_TEXTURE":true},"props":{"mouseX":0,"mouseY":0,"normalMap":{"__uuid__":"61bMKuT7ZLU6xgxgwON9pE"}}}}},[{"__type__":"cc.SceneAsset","_name":"NormalMap","scene":{"__id__":1},"asyncLoadAssets":null},{"__type__":"cc.Scene","_name":"New Node","_children":[{"__id__":2}],"_anchorPoint":{"__type__":"cc.Vec2"},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]},"autoReleaseAssets":false},{"__type__":"cc.Node","_name":"Canvas","_parent":{"__id__":1},"_children":[{"__id__":3},{"__id__":4},{"__id__":5}],"_components":[{"__type__":"cc.Canvas","node":{"__id__":2}},{"__type__":"cc.Widget","node":{"__id__":2},"_alignFlags":45}],"_contentSize":{"__type__":"cc.Size","width":960,"height":640},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[480,320,0,0,0,0,1,1,1,1]},"_id":"a5esZu+45LA5mBpvttspPD"},{"__type__":"cc.Node","_name":"Main Camera","_parent":{"__id__":2},"_components":[{"__type__":"cc.Camera","node":{"__id__":3},"_clearFlags":7,"_depth":-1}],"_contentSize":{"__type__":"cc.Size","width":960,"height":640},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,525.1226225728549,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"brickwall","_parent":{"__id__":2},"_components":[{"__type__":"cc.Sprite","node":{"__id__":4},"_materials":[{"__uuid__":"558yRCpxRJG6dg8W3h4vO7"}],"_spriteFrame":{"__uuid__":"7fS9XxQPZNZ544K9a7TtVR"}},{"__type__":"42b46HIzQhLBZRFlYTiDGsT","node":{"__id__":4}}],"_contentSize":{"__type__":"cc.Size","width":1024,"height":1024},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[166.114,-2.26,0,0,0,0,1,0.6,0.6,1]}},{"__type__":"cc.Node","_name":"New Slider","_parent":{"__id__":2},"_children":[{"__id__":6},{"__id__":7},{"__id__":9}],"_components":[{"__type__":"cc.Slider","node":{"__id__":5},"slideEvents":[{"__type__":"cc.ClickEvent","target":{"__id__":4},"_componentId":"42b46HIzQhLBZRFlYTiDGsT","handler":"updateLightHeight"}],"_N$handle":{"__id__":8}}],"_contentSize":{"__type__":"cc.Size","width":300,"height":20},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[-313.017,194.365,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Background","_objFlags":512,"_parent":{"__id__":5},"_components":[{"__type__":"cc.Sprite","node":{"__id__":6},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"312JYturtOx74Zjp9UpOqZ"},"_type":1,"_sizeMode":0}],"_contentSize":{"__type__":"cc.Size","width":300,"height":20},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Node","_name":"Handle","_objFlags":512,"_parent":{"__id__":5},"_components":[{"__type__":"cc.Sprite","node":{"__id__":7},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_spriteFrame":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_type":1,"_sizeMode":2},{"__id__":8}],"_contentSize":{"__type__":"cc.Size","width":32,"height":32},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[0,0,0,0,0,0,1,1,1,1]}},{"__type__":"cc.Button","node":{"__id__":7},"zoomScale":1.1,"_N$enableAutoGrayEffect":true,"_N$transition":3,"transition":3,"_N$pressedColor":{"__type__":"cc.Color","r":255,"g":255,"b":255},"pressedColor":{"__type__":"cc.Color","r":255,"g":255,"b":255},"_N$disabledColor":{"__type__":"cc.Color","r":255,"g":255,"b":255},"_N$normalSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_N$pressedSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"pressedSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_N$hoverSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"hoverSprite":{"__uuid__":"e7q6FL+VZEgLJUjVeDLic/"},"_N$disabledSprite":{"__uuid__":"29FYIk+N1GYaeWH/q1NxQO"},"_N$target":{"__id__":7}},{"__type__":"cc.Node","_name":"New Label","_parent":{"__id__":5},"_components":[{"__type__":"cc.Label","node":{"__id__":9},"_materials":[{"__uuid__":"ecpdLyjvZBwrvm+cedCcQy"}],"_useOriginalSize":false,"_string":"光源大小","_N$string":"光源大小","_N$horizontalAlign":1,"_N$verticalAlign":1}],"_contentSize":{"__type__":"cc.Size","width":160,"height":50.4},"_trs":{"__type__":"TypedArray","ctor":"Float64Array","array":[65.541,53.111,0,0,0,0,1,1,1,1]}}],{"__type__":"cc.SpriteFrame","content":{"name":"brickwall","texture":"4a7jJgsDtOoIp6fCcXiadt","rect":[0,0,1024,1024],"offset":[0,0],"originalSize":[1024,1024],"capInsets":[0,0,0,0]}},{"__type__":"cc.SpriteFrame","content":{"name":"default_radio_button_off","texture":"56fc2Ai/RFNYpaMT8crweK","rect":[3,3,26,26],"offset":[0,0],"originalSize":[32,32],"capInsets":[0,0,0,0]}},{"__type__":"cc.EffectAsset","_name":"NormalMapEffect","techniques":[{"passes":[{"blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"normalMap":{"value":"white","type":29},"mouseX":{"value":[0.5],"type":13},"mouseY":{"value":[0.5],"type":13},"lightHeight":{"value":[0.5],"type":13},"alphaThreshold":{"value":[0.5],"type":13}},"program":"NormalMapEffect|vs|fs"}]}],"shaders":[{"hash":2210982630,"glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D normalMap;\nuniform properties {\n  float mouseX;\n  float mouseY;\n  float lightHeight;\n};\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  vec2 p = -1.0 + 2.0 * v_uv0;\n  vec2 mouse = -1.0 + 2.0 * vec2(mouseX, mouseY);\n  vec3 normal = texture(normalMap, v_uv0).rgb;\n  normal = normalize(normal * 2.0 - 1.0);\n  vec3 lightDir = normalize(vec3(mouse, lightHeight) - vec3(p, 0));\n  vec4 lightColor = vec4(1.0, 1.0, 1.0, 1.0);\n  float diff = dot(normal, lightDir) * 2.0;\n  vec4 diffuse = diff * lightColor ;\n  vec2 dxy = v_uv0 - vec2(mouseX, mouseY);\n  gl_FragColor = diffuse * o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D normalMap;\nuniform float mouseX;\nuniform float mouseY;\nuniform float lightHeight;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  vec2 p = -1.0 + 2.0 * v_uv0;\n  vec2 mouse = -1.0 + 2.0 * vec2(mouseX, mouseY);\n  vec3 normal = texture2D(normalMap, v_uv0).rgb;\n  normal = normalize(normal * 2.0 - 1.0);\n  vec3 lightDir = normalize(vec3(mouse, lightHeight) - vec3(p, 0));\n  vec4 lightColor = vec4(1.0, 1.0, 1.0, 1.0);\n  float diff = dot(normal, lightDir) * 2.0;\n  vec4 diffuse = diff * lightColor ;\n  vec2 dxy = v_uv0 - vec2(mouseX, mouseY);\n  gl_FragColor = diffuse * o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"],"binding":0},{"name":"properties","members":[{"name":"mouseX","type":13,"count":1},{"name":"mouseY","type":13,"count":1},{"name":"lightHeight","type":13,"count":1}],"defines":["USE_TEXTURE"],"binding":1}],"samplers":[{"name":"texture","type":29,"count":1,"defines":["USE_TEXTURE"],"binding":30},{"name":"normalMap","type":29,"count":1,"defines":["USE_TEXTURE"],"binding":31}],"record":null,"name":"NormalMapEffect|vs|fs"}]}]